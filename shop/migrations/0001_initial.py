# Generated by Django 5.0.1 on 2025-07-07 12:35

import autoslug.fields
import cloudinary_storage.storage
import django.db.models.deletion
import django.utils.timezone
import shop.models
import taggit.managers
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnonymousUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CollectionSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('hero', models.BooleanField(default=False)),
                ('image', shop.models.ResizedImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='collectionset/')),
                ('mobile_image', shop.models.ResizedImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='collectionset/')),
            ],
        ),
        migrations.CreateModel(
            name='Cuppon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuppon_name', models.CharField(max_length=10)),
                ('percent', models.PositiveIntegerField(default=0)),
                ('min_order', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PageVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255)),
                ('view_name', models.CharField(max_length=255)),
                ('session_address', models.CharField(blank=True, max_length=255, null=True)),
                ('count', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('not_confirm', 'not_confirm'), ('Confirmed', 'Confirmed'), ('Pending', 'Pending'), ('Processing', 'Processing'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('sesssion_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('complete', models.BooleanField(blank=True, default=False)),
                ('order_id', models.CharField(blank=True, max_length=20, null=True)),
                ('coupon', models.BooleanField(blank=True, default=False, null=True)),
                ('coupon_percentange', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('cancel_reason', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, choices=[('inside_dhaka', 'Inside Dhaka'), ('outside_dhaka', 'Outside Dhaka')], max_length=20, null=True)),
                ('totalbill', models.PositiveIntegerField(default=0)),
                ('delivary_charge', models.PositiveIntegerField(default=False)),
                ('status_changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', autoslug.fields.AutoSlugField(default=None, editable=False, null=True, populate_from='name', unique=True)),
                ('product_code', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('price', models.IntegerField(default=0)),
                ('unstitched_price', models.PositiveIntegerField(default=0)),
                ('discount_percent', models.IntegerField(default=0)),
                ('main_price', models.IntegerField(default=0)),
                ('discount', models.BooleanField(default=True, null=True)),
                ('image', shop.models.ResizedImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='product-image/')),
                ('image2', shop.models.ResizedImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='product-image/')),
                ('image3', shop.models.ResizedImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='product-image/')),
                ('image4', shop.models.ResizedImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='product-image/')),
                ('youtube_video_id', models.CharField(blank=True, max_length=50, null=True)),
                ('arrive_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('new_arrival', models.BooleanField(blank=True, default=False)),
                ('in_stock', models.BooleanField(blank=True, default=True)),
                ('ratting', models.FloatField(default=0)),
                ('customization_possible', models.BooleanField(blank=True, default=False, null=True)),
                ('collectionset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.collectionset')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('size', models.CharField(blank=True, max_length=10, null=True)),
                ('is_stitched', models.BooleanField(default=True)),
                ('customization_note', models.TextField(blank=True, null=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='shop.order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='items',
            field=models.ManyToManyField(through='shop.OrderItem', to='shop.product'),
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', shop.models.ResizedImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='category/')),
                ('is_popular', models.BooleanField(default=False)),
                ('collection', models.ManyToManyField(to='shop.collectionset')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='productCategory',
            field=models.ManyToManyField(to='shop.productcategory'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_anonymous', models.BooleanField(default=False)),
                ('join_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('address_note', models.CharField(max_length=100)),
                ('phon', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.order')),
                ('seen_by', models.ManyToManyField(blank=True, related_name='seen_orders', to='shop.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, null=True)),
                ('content', models.TextField()),
                ('image', shop.models.ResizedImageField(blank=True, null=True, storage=cloudinary_storage.storage.MediaCloudinaryStorage(), upload_to='product-review/')),
                ('ratting', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('at_time', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.userprofile'),
        ),
    ]
